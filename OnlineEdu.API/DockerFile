# .NET 8.0 ile web uygulamasý imajý
FROM mcr.microsoft.com/dotnet/aspnet:8.0 AS base
WORKDIR /app
EXPOSE 80

# .NET SDK imajý ile build iþlemi
FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build
WORKDIR /src
COPY ["OnlineEdu.WebApi/OnlineEdu.WebApi.csproj", "OnlineEdu.WebApi/"]
RUN dotnet restore "./OnlineEdu.WebApi/OnlineEdu.WebApi.csproj"
COPY . .
WORKDIR "/src/OnlineEdu.WebApi"
RUN dotnet build "./OnlineEdu.WebApi.csproj" -c Release -o /app/build

# Yayýnlama iþlemi
FROM build AS publish
RUN dotnet publish "./OnlineEdu.WebApi.csproj" -c Release -o /app/publish /p:UseAppHost=false

# SQL Server imajýný ekle
FROM mcr.microsoft.com/mssql/server:2022-latest AS db
WORKDIR /db

# SQL Server için gerekli environment deðiþkenlerini ekle
ENV ACCEPT_EULA=Y
ENV SA_PASSWORD=YourStrong@Password
ENV MSSQL_PID=Express

EXPOSE 1433

# PostgreSQL imajýný ekle
FROM postgres:latest AS postgres
WORKDIR /db

# PostgreSQL environment deðiþkenlerini ayarla
ENV POSTGRES_USER=myuser
ENV POSTGRES_PASSWORD=mypassword
ENV POSTGRES_DB=mydatabase

EXPOSE 5432

# Web uygulamasý imajý ve SQL Server
FROM base AS final
WORKDIR /app
COPY --from=publish /app/publish .

# SQL Server ve PostgreSQL'in baþlatýlmasý
CMD /opt/mssql/bin/sqlservr & docker-entrypoint.sh postgres & dotnet OnlineEdu.WebApi.dll
